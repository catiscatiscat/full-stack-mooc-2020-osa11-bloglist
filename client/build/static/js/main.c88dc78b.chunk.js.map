{"version":3,"sources":["components/Blog.js","components/BlogForm.js","components/LoginForm.js","components/Notification.js","components/Togglable.js","components/User.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","updateBlog","deleteBlog","username","useState","showFull","setShowFull","allowedToRemove","user","confirmMessage","title","author","className","id","type","onClick","url","likes","name","window","confirm","BlogForm","createBlog","newAuthor","setNewAuthor","newTitle","setNewTitle","newUrl","setNewUrl","onSubmit","event","preventDefault","value","onChange","target","LoginForm","props","submitHandler","password","handleNameChange","handlePasswordChange","Notification","message","notificationStyle","background","fontSize","border","borderRadius","padding","marginBottom","successStyle","color","errorStyle","style","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonId","buttonLabel","children","displayName","User","handleLogout","token","setToken","newToken","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","blogUrl","put","delBlog","blogId","delete","status","login","credentials","App","blogs","setBlogs","setPassword","setUser","setUsername","setMessage","blogFormRef","useRef","messageTimeOut","time","setTimeout","useEffect","blogService","initialBlogs","_","orderBy","getBlogs","loggedUserJSON","localStorage","getItem","JSON","parse","addBlog","blogObject","current","returnedBlog","concat","blogToUpdate","find","newBlogs","filter","handleLogin","loginService","setItem","stringify","removeItem","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c88dc78b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Blog = ({ blog, updateBlog, deleteBlog, username }) => {\n  const [showFull, setShowFull] = useState(false);\n\n  const toggleShowFull = () => {\n    setShowFull(!showFull);\n  };\n\n  const allowedToRemove = username === blog.user.username;\n  const confirmMessage = `Really want to remove blog ${blog.title} by ${blog.author}?`;\n\n  const handleUpdateBlog = () => {\n    updateBlog({\n      id: blog.id,\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes + 1,\n      user: blog.user.id,\n    });\n  };\n\n  const handleDeleteBlog = () => {\n    if (window.confirm(confirmMessage)) {\n      deleteBlog({\n        id: blog.id,\n        title: blog.title,\n      });\n    }\n  };\n\n  return (\n    <div className='blog'>\n      <div id='blog-basic-info'>\n        {blog.title} {blog.author}{' '}\n        <button id='view-hide-btn' type='button' onClick={toggleShowFull}>\n          {!showFull ? 'view' : 'hide'}\n        </button>\n      </div>\n      <>\n        {showFull && (\n          <>\n            <div>{blog.url}</div>\n            <div id='likes'>\n              {' '}\n              Likes {blog.likes}{' '}\n              <button\n                id='like-btn'\n                className='likeBtn'\n                type='button'\n                onClick={handleUpdateBlog}\n              >\n                Like\n              </button>\n            </div>\n            <div>{blog.user.name}</div>\n            {allowedToRemove && (\n              <button\n                id='remove-btn'\n                className='removeBtn'\n                type='button'\n                onClick={handleDeleteBlog}\n              >\n                remove\n              </button>\n            )}\n          </>\n        )}\n      </>\n    </div>\n  );\n};\n\nBlog.propTypes = {\n  blog: PropTypes.object,\n  updateBlog: PropTypes.func,\n  deleteBlog: PropTypes.func,\n  username: PropTypes.string,\n};\n\nexport default Blog;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst BlogForm = ({ createBlog }) => {\n  const [newAuthor, setNewAuthor] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n  const [newUrl, setNewUrl] = useState('');\n\n  const handleTitleChange = event => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleAuthorChange = event => {\n    setNewAuthor(event.target.value);\n  };\n\n  const handleUrlChange = event => {\n    setNewUrl(event.target.value);\n  };\n\n  const addBlog = event => {\n    event.preventDefault();\n\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl,\n    });\n\n    setNewTitle('');\n    setNewAuthor('');\n    setNewUrl('');\n  };\n\n  return (\n    <div>\n      <h3>create new</h3>\n      <form onSubmit={addBlog} className='blogForm'>\n        <label>\n          title <input id='title' value={newTitle} onChange={handleTitleChange} />\n        </label>\n        <label>\n          Author <input id='author' value={newAuthor} onChange={handleAuthorChange} />\n        </label>\n        <label>\n          url <input id='url' value={newUrl} onChange={handleUrlChange} />\n        </label>\n        <button className='createBtn' type='submit'>\n          create\n        </button>\n      </form>\n    </div>\n  );\n};\n\nBlogForm.propTypes = { createBlog: PropTypes.func };\n\nexport default BlogForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst LoginForm = props => {\n  const {\n    submitHandler,\n    username,\n    password,\n    handleNameChange,\n    handlePasswordChange,\n  } = props;\n\n  return (\n    <>\n      <form onSubmit={submitHandler}>\n        <div>\n          username\n          <input\n            id='username-input'\n            type='text'\n            value={username}\n            name='Username'\n            onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            id='password-input'\n            type='password'\n            value={password}\n            name='Password'\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id='login-btn' type='submit'>\n          login\n        </button>\n      </form>\n    </>\n  );\n};\n\nLoginForm.propTypes = {\n  submitHandler: PropTypes.func,\n  username: PropTypes.string,\n  password: PropTypes.string,\n  handleNameChange: PropTypes.func,\n  handlePasswordChange: PropTypes.func,\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  const notificationStyle = {\n    background: 'lightgrey',\n    fontSize: 20,\n    border: 1,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n  const successStyle = { ...notificationStyle, color: 'green' };\n  const errorStyle = { ...notificationStyle, color: 'red' };\n\n  if (message === null) {\n    return null;\n  }\n  if (message.type === 'success') {\n    return (\n      <div>\n        <div id='success' style={successStyle}>{message.message}</div>\n      </div>\n    );\n  }\n  if (message.type === 'error') {\n    return (\n      <div>\n        <div id='error' style={errorStyle}>{message.message}</div>\n      </div>\n    );\n  }\n  return <></>;\n};\n\nNotification.propTypes = { message: PropTypes.object };\n\nexport default Notification;\n","import React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => ({ toggleVisibility }));\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button id={props.buttonId} type='button' onClick={toggleVisibility}>\n          {props.buttonLabel}\n        </button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}{' '}\n        <button type='button' onClick={toggleVisibility}>\n          cancel\n        </button>\n      </div>\n    </div>\n  );\n});\n\nTogglable.displayName = 'Togglable';\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  buttonId: PropTypes.string,\n};\n\nexport default Togglable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = props => {\n  const { handleLogout, username } = props;\n\n  return (\n    <div className='user'>\n      <p className='userText'>{username} is logged in</p>\n      <button id='logout-btn' className='logoutBtn' type='button' onClick={handleLogout}>\n        logout\n      </button>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  handleLogout: PropTypes.func,\n  username: PropTypes.string,\n};\n\nexport default User;\n","import axios from 'axios';\n\nconst baseUrl = '/api/blogs';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = async newObject => {\n  const config = { headers: { Authorization: token } };\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\nconst update = async newObject => {\n  const config = { headers: { Authorization: token } };\n  const blogUrl = `${baseUrl}/${newObject.id}`;\n  const response = await axios.put(blogUrl, newObject, config);\n  return response.data;\n};\n\nconst delBlog = async blogId => {\n  const config = { headers: { Authorization: token } };\n  const blogUrl = `${baseUrl}/${blogId}`;\n  const response = await axios.delete(blogUrl, config);\n  return response.status;\n};\n\nexport default {\n  setToken,\n  getAll,\n  create,\n  update,\n  delBlog,\n};\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React, { useState, useEffect, useRef } from 'react';\nimport _ from 'lodash';\n\nimport Blog from './components/Blog';\nimport BlogForm from './components/BlogForm';\nimport LoginForm from './components/LoginForm';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable';\nimport User from './components/User';\n\nimport blogService from './services/blogs';\nimport loginService from './services/login';\n\nimport './App.css';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const blogFormRef = useRef();\n\n  const timeOutTime = 3000;\n\n  const messageTimeOut = time => {\n    setTimeout(() => {\n      setMessage(null);\n    }, time);\n  };\n\n  useEffect(() => {\n    const getBlogs = async () => {\n      try {\n        let initialBlogs = await blogService.getAll();\n        initialBlogs = _.orderBy(\n          initialBlogs,\n          ['likes', 'title'],\n          ['desc', 'asc']\n        );\n        setBlogs(initialBlogs);\n        setMessage({\n          message: 'Blogs succesfully loaded from server',\n          type: 'success',\n        });\n        messageTimeOut(timeOutTime);\n      } catch (error) {\n        setMessage({\n          message: 'Failed to get blogs from server',\n          type: 'error',\n        });\n        messageTimeOut(timeOutTime);\n      }\n    };\n\n    if (user) {\n      getBlogs();\n    }\n  }, [user]);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleNameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const addBlog = async blogObject => {\n    try {\n      blogFormRef.current.toggleVisibility();\n      let returnedBlog = await blogService.create(blogObject);\n      returnedBlog = {\n        ...returnedBlog,\n        user: { name: user.name, username: user.username },\n      };\n      setBlogs(blogs.concat(returnedBlog));\n      setMessage({\n        message: `a new blog ${returnedBlog.title} by ${returnedBlog.author} added`,\n        type: 'success',\n      });\n      messageTimeOut(timeOutTime);\n    } catch (error) {\n      setMessage({\n        message: 'failed to add a new blog',\n        type: 'error',\n      });\n      messageTimeOut(timeOutTime);\n    }\n  };\n\n  const updateBlog = async blogObject => {\n    try {\n      let returnedBlog = await blogService.update(blogObject);\n      let blogToUpdate = _.find(blogs, blog => blog.id === returnedBlog.id);\n      blogToUpdate = {\n        ...blogToUpdate,\n        likes: returnedBlog.likes,\n      };\n      const newBlogs = _(blogs)\n        .filter(blog => blog.id !== returnedBlog.id)\n        .concat(blogToUpdate)\n        .orderBy(['likes', 'title'], ['desc', 'asc'])\n        .value();\n\n      setBlogs(newBlogs);\n      setMessage({\n        message: `blog's ${returnedBlog.title} likes updated`,\n        type: 'success',\n      });\n      messageTimeOut(timeOutTime);\n    } catch (error) {\n      setMessage({\n        message: 'failed to update blog',\n        type: 'error',\n      });\n      messageTimeOut(timeOutTime);\n    }\n  };\n\n  const deleteBlog = async blogObject => {\n    try {\n      await blogService.delBlog(blogObject.id);\n      setBlogs(_.filter(blogs, blog => blog.id !== blogObject.id));\n      setMessage({\n        message: `blog ${blogObject.title} deleted`,\n        type: 'success',\n      });\n      messageTimeOut(timeOutTime);\n    } catch (error) {\n      setMessage({\n        message: 'failed to delete blog',\n        type: 'error',\n      });\n      messageTimeOut(timeOutTime);\n    }\n  };\n\n  const blogForm = () => (\n    <Togglable buttonId='create-btn' buttonLabel='create a new blog' ref={blogFormRef}>\n      <BlogForm createBlog={addBlog} />\n    </Togglable>\n  );\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password,\n      });\n\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUsername('');\n      setPassword('');\n      setMessage({\n        message: `${user.name} logged in`,\n        type: 'success',\n      });\n      messageTimeOut(timeOutTime);\n      setTimeout(() => {\n        setUser(user);\n      }, timeOutTime);\n    } catch (error) {\n      setMessage({\n        message: 'wrong username or password',\n        type: 'error',\n      });\n      messageTimeOut(timeOutTime);\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    window.localStorage.removeItem('loggedBlogAppUser');\n  };\n\n  return (\n    <div>\n      <Notification message={message} />\n      {user === null ? (\n        <>\n          <h2>log in to application</h2>\n          <LoginForm\n            username={username}\n            password={password}\n            handleNameChange={handleNameChange}\n            handlePasswordChange={handlePasswordChange}\n            submitHandler={handleLogin}\n          />\n        </>\n      ) : (\n        <>\n          <h2>blogs</h2>\n          <User username={user.name} handleLogout={handleLogout} />\n          {blogForm()}\n          <div id='blogs' className='form'>\n            {blogs.map(blog => (\n              <Blog\n                key={blog.id}\n                blog={blog}\n                updateBlog={updateBlog}\n                deleteBlog={deleteBlog}\n                username={user.username}\n              />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}